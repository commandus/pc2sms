// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pc2sms.proto

#include "pc2sms.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace pc2sms {
PROTOBUF_CONSTEXPR Credentials::Credentials(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.login_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CredentialsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CredentialsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CredentialsDefaultTypeInternal() {}
  union {
    Credentials _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CredentialsDefaultTypeInternal _Credentials_default_instance_;
PROTOBUF_CONSTEXPR SMS::SMS(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.phone_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SMSDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SMSDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SMSDefaultTypeInternal() {}
  union {
    SMS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SMSDefaultTypeInternal _SMS_default_instance_;
PROTOBUF_CONSTEXPR RequestCommand::RequestCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.credentials_)*/nullptr
  , /*decltype(_impl_.sms_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestCommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestCommandDefaultTypeInternal() {}
  union {
    RequestCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestCommandDefaultTypeInternal _RequestCommand_default_instance_;
PROTOBUF_CONSTEXPR ResponseCommand::ResponseCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseCommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseCommandDefaultTypeInternal() {}
  union {
    ResponseCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseCommandDefaultTypeInternal _ResponseCommand_default_instance_;
}  // namespace pc2sms
static ::_pb::Metadata file_level_metadata_pc2sms_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_pc2sms_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_pc2sms_2eproto = nullptr;

const uint32_t TableStruct_pc2sms_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pc2sms::Credentials, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pc2sms::Credentials, _impl_.login_),
  PROTOBUF_FIELD_OFFSET(::pc2sms::Credentials, _impl_.password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pc2sms::SMS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pc2sms::SMS, _impl_.phone_),
  PROTOBUF_FIELD_OFFSET(::pc2sms::SMS, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pc2sms::RequestCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pc2sms::RequestCommand, _impl_.credentials_),
  PROTOBUF_FIELD_OFFSET(::pc2sms::RequestCommand, _impl_.sms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pc2sms::ResponseCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pc2sms::ResponseCommand, _impl_.count_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::pc2sms::Credentials)},
  { 8, -1, -1, sizeof(::pc2sms::SMS)},
  { 16, -1, -1, sizeof(::pc2sms::RequestCommand)},
  { 24, -1, -1, sizeof(::pc2sms::ResponseCommand)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::pc2sms::_Credentials_default_instance_._instance,
  &::pc2sms::_SMS_default_instance_._instance,
  &::pc2sms::_RequestCommand_default_instance_._instance,
  &::pc2sms::_ResponseCommand_default_instance_._instance,
};

const char descriptor_table_protodef_pc2sms_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014pc2sms.proto\022\006pc2sms\".\n\013Credentials\022\r\n"
  "\005login\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"%\n\003SMS\022\r\n"
  "\005phone\030\001 \001(\t\022\017\n\007message\030\002 \001(\t\"T\n\016Request"
  "Command\022(\n\013credentials\030\001 \001(\0132\023.pc2sms.Cr"
  "edentials\022\030\n\003sms\030\002 \001(\0132\013.pc2sms.SMS\" \n\017R"
  "esponseCommand\022\r\n\005count\030\001 \001(\0052~\n\003sms\022@\n\r"
  "requestToSend\022\026.pc2sms.RequestCommand\032\027."
  "pc2sms.ResponseCommand\0225\n\017listenSMSToSen"
  "d\022\023.pc2sms.Credentials\032\013.pc2sms.SMS0\001B#\n"
  "\016io.grpc.pc2smsB\006pc2smsP\001\370\001\001\242\002\003RTGb\006prot"
  "o3"
  ;
static ::_pbi::once_flag descriptor_table_pc2sms_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_pc2sms_2eproto = {
    false, false, 402, descriptor_table_protodef_pc2sms_2eproto,
    "pc2sms.proto",
    &descriptor_table_pc2sms_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_pc2sms_2eproto::offsets,
    file_level_metadata_pc2sms_2eproto, file_level_enum_descriptors_pc2sms_2eproto,
    file_level_service_descriptors_pc2sms_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_pc2sms_2eproto_getter() {
  return &descriptor_table_pc2sms_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_pc2sms_2eproto(&descriptor_table_pc2sms_2eproto);
namespace pc2sms {

// ===================================================================

class Credentials::_Internal {
 public:
};

Credentials::Credentials(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pc2sms.Credentials)
}
Credentials::Credentials(const Credentials& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Credentials* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.login_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.login_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.login_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_login().empty()) {
    _this->_impl_.login_.Set(from._internal_login(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pc2sms.Credentials)
}

inline void Credentials::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.login_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.login_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.login_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Credentials::~Credentials() {
  // @@protoc_insertion_point(destructor:pc2sms.Credentials)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Credentials::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.login_.Destroy();
  _impl_.password_.Destroy();
}

void Credentials::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Credentials::Clear() {
// @@protoc_insertion_point(message_clear_start:pc2sms.Credentials)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.login_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Credentials::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string login = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_login();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pc2sms.Credentials.login"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pc2sms.Credentials.password"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Credentials::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pc2sms.Credentials)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string login = 1;
  if (!this->_internal_login().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login().data(), static_cast<int>(this->_internal_login().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pc2sms.Credentials.login");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pc2sms.Credentials.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pc2sms.Credentials)
  return target;
}

size_t Credentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pc2sms.Credentials)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login = 1;
  if (!this->_internal_login().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Credentials::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Credentials::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Credentials::GetClassData() const { return &_class_data_; }


void Credentials::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Credentials*>(&to_msg);
  auto& from = static_cast<const Credentials&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pc2sms.Credentials)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_login().empty()) {
    _this->_internal_set_login(from._internal_login());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Credentials::CopyFrom(const Credentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pc2sms.Credentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Credentials::IsInitialized() const {
  return true;
}

void Credentials::InternalSwap(Credentials* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.login_, lhs_arena,
      &other->_impl_.login_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Credentials::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pc2sms_2eproto_getter, &descriptor_table_pc2sms_2eproto_once,
      file_level_metadata_pc2sms_2eproto[0]);
}

// ===================================================================

class SMS::_Internal {
 public:
};

SMS::SMS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pc2sms.SMS)
}
SMS::SMS(const SMS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SMS* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.phone_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.phone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.phone_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_phone().empty()) {
    _this->_impl_.phone_.Set(from._internal_phone(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pc2sms.SMS)
}

inline void SMS::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.phone_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.phone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.phone_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SMS::~SMS() {
  // @@protoc_insertion_point(destructor:pc2sms.SMS)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SMS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.phone_.Destroy();
  _impl_.message_.Destroy();
}

void SMS::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SMS::Clear() {
// @@protoc_insertion_point(message_clear_start:pc2sms.SMS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.phone_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SMS::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string phone = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_phone();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pc2sms.SMS.phone"));
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pc2sms.SMS.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SMS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pc2sms.SMS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (!this->_internal_phone().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_phone().data(), static_cast<int>(this->_internal_phone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pc2sms.SMS.phone");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_phone(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pc2sms.SMS.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pc2sms.SMS)
  return target;
}

size_t SMS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pc2sms.SMS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string phone = 1;
  if (!this->_internal_phone().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_phone());
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SMS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SMS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SMS::GetClassData() const { return &_class_data_; }


void SMS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SMS*>(&to_msg);
  auto& from = static_cast<const SMS&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pc2sms.SMS)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_phone().empty()) {
    _this->_internal_set_phone(from._internal_phone());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SMS::CopyFrom(const SMS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pc2sms.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMS::IsInitialized() const {
  return true;
}

void SMS::InternalSwap(SMS* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.phone_, lhs_arena,
      &other->_impl_.phone_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SMS::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pc2sms_2eproto_getter, &descriptor_table_pc2sms_2eproto_once,
      file_level_metadata_pc2sms_2eproto[1]);
}

// ===================================================================

class RequestCommand::_Internal {
 public:
  static const ::pc2sms::Credentials& credentials(const RequestCommand* msg);
  static const ::pc2sms::SMS& sms(const RequestCommand* msg);
};

const ::pc2sms::Credentials&
RequestCommand::_Internal::credentials(const RequestCommand* msg) {
  return *msg->_impl_.credentials_;
}
const ::pc2sms::SMS&
RequestCommand::_Internal::sms(const RequestCommand* msg) {
  return *msg->_impl_.sms_;
}
RequestCommand::RequestCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pc2sms.RequestCommand)
}
RequestCommand::RequestCommand(const RequestCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.credentials_){nullptr}
    , decltype(_impl_.sms_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_credentials()) {
    _this->_impl_.credentials_ = new ::pc2sms::Credentials(*from._impl_.credentials_);
  }
  if (from._internal_has_sms()) {
    _this->_impl_.sms_ = new ::pc2sms::SMS(*from._impl_.sms_);
  }
  // @@protoc_insertion_point(copy_constructor:pc2sms.RequestCommand)
}

inline void RequestCommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.credentials_){nullptr}
    , decltype(_impl_.sms_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestCommand::~RequestCommand() {
  // @@protoc_insertion_point(destructor:pc2sms.RequestCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.credentials_;
  if (this != internal_default_instance()) delete _impl_.sms_;
}

void RequestCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:pc2sms.RequestCommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.credentials_ != nullptr) {
    delete _impl_.credentials_;
  }
  _impl_.credentials_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.sms_ != nullptr) {
    delete _impl_.sms_;
  }
  _impl_.sms_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pc2sms.Credentials credentials = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_credentials(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pc2sms.SMS sms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sms(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestCommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pc2sms.RequestCommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pc2sms.Credentials credentials = 1;
  if (this->_internal_has_credentials()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::credentials(this),
        _Internal::credentials(this).GetCachedSize(), target, stream);
  }

  // .pc2sms.SMS sms = 2;
  if (this->_internal_has_sms()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::sms(this),
        _Internal::sms(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pc2sms.RequestCommand)
  return target;
}

size_t RequestCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pc2sms.RequestCommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pc2sms.Credentials credentials = 1;
  if (this->_internal_has_credentials()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.credentials_);
  }

  // .pc2sms.SMS sms = 2;
  if (this->_internal_has_sms()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sms_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestCommand::GetClassData() const { return &_class_data_; }


void RequestCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestCommand*>(&to_msg);
  auto& from = static_cast<const RequestCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pc2sms.RequestCommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_credentials()) {
    _this->_internal_mutable_credentials()->::pc2sms::Credentials::MergeFrom(
        from._internal_credentials());
  }
  if (from._internal_has_sms()) {
    _this->_internal_mutable_sms()->::pc2sms::SMS::MergeFrom(
        from._internal_sms());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestCommand::CopyFrom(const RequestCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pc2sms.RequestCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestCommand::IsInitialized() const {
  return true;
}

void RequestCommand::InternalSwap(RequestCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestCommand, _impl_.sms_)
      + sizeof(RequestCommand::_impl_.sms_)
      - PROTOBUF_FIELD_OFFSET(RequestCommand, _impl_.credentials_)>(
          reinterpret_cast<char*>(&_impl_.credentials_),
          reinterpret_cast<char*>(&other->_impl_.credentials_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pc2sms_2eproto_getter, &descriptor_table_pc2sms_2eproto_once,
      file_level_metadata_pc2sms_2eproto[2]);
}

// ===================================================================

class ResponseCommand::_Internal {
 public:
};

ResponseCommand::ResponseCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pc2sms.ResponseCommand)
}
ResponseCommand::ResponseCommand(const ResponseCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResponseCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.count_ = from._impl_.count_;
  // @@protoc_insertion_point(copy_constructor:pc2sms.ResponseCommand)
}

inline void ResponseCommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResponseCommand::~ResponseCommand() {
  // @@protoc_insertion_point(destructor:pc2sms.ResponseCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResponseCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:pc2sms.ResponseCommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.count_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseCommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pc2sms.ResponseCommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pc2sms.ResponseCommand)
  return target;
}

size_t ResponseCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pc2sms.ResponseCommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseCommand::GetClassData() const { return &_class_data_; }


void ResponseCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseCommand*>(&to_msg);
  auto& from = static_cast<const ResponseCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pc2sms.ResponseCommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseCommand::CopyFrom(const ResponseCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pc2sms.ResponseCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseCommand::IsInitialized() const {
  return true;
}

void ResponseCommand::InternalSwap(ResponseCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.count_, other->_impl_.count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pc2sms_2eproto_getter, &descriptor_table_pc2sms_2eproto_once,
      file_level_metadata_pc2sms_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pc2sms
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pc2sms::Credentials*
Arena::CreateMaybeMessage< ::pc2sms::Credentials >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pc2sms::Credentials >(arena);
}
template<> PROTOBUF_NOINLINE ::pc2sms::SMS*
Arena::CreateMaybeMessage< ::pc2sms::SMS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pc2sms::SMS >(arena);
}
template<> PROTOBUF_NOINLINE ::pc2sms::RequestCommand*
Arena::CreateMaybeMessage< ::pc2sms::RequestCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pc2sms::RequestCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::pc2sms::ResponseCommand*
Arena::CreateMaybeMessage< ::pc2sms::ResponseCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pc2sms::ResponseCommand >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
