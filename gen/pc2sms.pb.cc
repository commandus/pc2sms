// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pc2sms.proto

#include "pc2sms.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_pc2sms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Credentials_pc2sms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pc2sms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SMS_pc2sms_2eproto;
namespace pc2sms {
class CredentialsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Credentials> _instance;
} _Credentials_default_instance_;
class SMSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SMS> _instance;
} _SMS_default_instance_;
class RequestCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestCommand> _instance;
} _RequestCommand_default_instance_;
class ResponseCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResponseCommand> _instance;
} _ResponseCommand_default_instance_;
}  // namespace pc2sms
static void InitDefaultsscc_info_Credentials_pc2sms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pc2sms::_Credentials_default_instance_;
    new (ptr) ::pc2sms::Credentials();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pc2sms::Credentials::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Credentials_pc2sms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Credentials_pc2sms_2eproto}, {}};

static void InitDefaultsscc_info_RequestCommand_pc2sms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pc2sms::_RequestCommand_default_instance_;
    new (ptr) ::pc2sms::RequestCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pc2sms::RequestCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RequestCommand_pc2sms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RequestCommand_pc2sms_2eproto}, {
      &scc_info_Credentials_pc2sms_2eproto.base,
      &scc_info_SMS_pc2sms_2eproto.base,}};

static void InitDefaultsscc_info_ResponseCommand_pc2sms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pc2sms::_ResponseCommand_default_instance_;
    new (ptr) ::pc2sms::ResponseCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pc2sms::ResponseCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResponseCommand_pc2sms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResponseCommand_pc2sms_2eproto}, {}};

static void InitDefaultsscc_info_SMS_pc2sms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pc2sms::_SMS_default_instance_;
    new (ptr) ::pc2sms::SMS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pc2sms::SMS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SMS_pc2sms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SMS_pc2sms_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_pc2sms_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_pc2sms_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_pc2sms_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_pc2sms_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pc2sms::Credentials, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pc2sms::Credentials, login_),
  PROTOBUF_FIELD_OFFSET(::pc2sms::Credentials, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pc2sms::SMS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pc2sms::SMS, phone_),
  PROTOBUF_FIELD_OFFSET(::pc2sms::SMS, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pc2sms::RequestCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pc2sms::RequestCommand, credentials_),
  PROTOBUF_FIELD_OFFSET(::pc2sms::RequestCommand, sms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pc2sms::ResponseCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pc2sms::ResponseCommand, count_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pc2sms::Credentials)},
  { 7, -1, sizeof(::pc2sms::SMS)},
  { 14, -1, sizeof(::pc2sms::RequestCommand)},
  { 21, -1, sizeof(::pc2sms::ResponseCommand)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pc2sms::_Credentials_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pc2sms::_SMS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pc2sms::_RequestCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pc2sms::_ResponseCommand_default_instance_),
};

const char descriptor_table_protodef_pc2sms_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014pc2sms.proto\022\006pc2sms\".\n\013Credentials\022\r\n"
  "\005login\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"%\n\003SMS\022\r\n"
  "\005phone\030\001 \001(\t\022\017\n\007message\030\002 \001(\t\"T\n\016Request"
  "Command\022(\n\013credentials\030\001 \001(\0132\023.pc2sms.Cr"
  "edentials\022\030\n\003sms\030\002 \001(\0132\013.pc2sms.SMS\" \n\017R"
  "esponseCommand\022\r\n\005count\030\001 \001(\0052~\n\003sms\022@\n\r"
  "requestToSend\022\026.pc2sms.RequestCommand\032\027."
  "pc2sms.ResponseCommand\0225\n\017listenSMSToSen"
  "d\022\023.pc2sms.Credentials\032\013.pc2sms.SMS0\001B#\n"
  "\016io.grpc.pc2smsB\006pc2smsP\001\370\001\001\242\002\003RTGb\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_pc2sms_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_pc2sms_2eproto_sccs[4] = {
  &scc_info_Credentials_pc2sms_2eproto.base,
  &scc_info_RequestCommand_pc2sms_2eproto.base,
  &scc_info_ResponseCommand_pc2sms_2eproto.base,
  &scc_info_SMS_pc2sms_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_pc2sms_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pc2sms_2eproto = {
  false, false, descriptor_table_protodef_pc2sms_2eproto, "pc2sms.proto", 402,
  &descriptor_table_pc2sms_2eproto_once, descriptor_table_pc2sms_2eproto_sccs, descriptor_table_pc2sms_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_pc2sms_2eproto::offsets,
  file_level_metadata_pc2sms_2eproto, 4, file_level_enum_descriptors_pc2sms_2eproto, file_level_service_descriptors_pc2sms_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_pc2sms_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_pc2sms_2eproto)), true);
namespace pc2sms {

// ===================================================================

void Credentials::InitAsDefaultInstance() {
}
class Credentials::_Internal {
 public:
};

Credentials::Credentials(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pc2sms.Credentials)
}
Credentials::Credentials(const Credentials& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login().empty()) {
    login_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:pc2sms.Credentials)
}

void Credentials::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Credentials_pc2sms_2eproto.base);
  login_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Credentials::~Credentials() {
  // @@protoc_insertion_point(destructor:pc2sms.Credentials)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Credentials::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Credentials::ArenaDtor(void* object) {
  Credentials* _this = reinterpret_cast< Credentials* >(object);
  (void)_this;
}
void Credentials::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Credentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Credentials& Credentials::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Credentials_pc2sms_2eproto.base);
  return *internal_default_instance();
}


void Credentials::Clear() {
// @@protoc_insertion_point(message_clear_start:pc2sms.Credentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Credentials::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string login = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_login();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pc2sms.Credentials.login"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pc2sms.Credentials.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Credentials::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pc2sms.Credentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login = 1;
  if (this->login().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login().data(), static_cast<int>(this->_internal_login().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pc2sms.Credentials.login");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_login(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pc2sms.Credentials.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pc2sms.Credentials)
  return target;
}

size_t Credentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pc2sms.Credentials)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login = 1;
  if (this->login().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Credentials::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pc2sms.Credentials)
  GOOGLE_DCHECK_NE(&from, this);
  const Credentials* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Credentials>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pc2sms.Credentials)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pc2sms.Credentials)
    MergeFrom(*source);
  }
}

void Credentials::MergeFrom(const Credentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pc2sms.Credentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login().size() > 0) {
    _internal_set_login(from._internal_login());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
}

void Credentials::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pc2sms.Credentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Credentials::CopyFrom(const Credentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pc2sms.Credentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Credentials::IsInitialized() const {
  return true;
}

void Credentials::InternalSwap(Credentials* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  login_.Swap(&other->login_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Credentials::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SMS::InitAsDefaultInstance() {
}
class SMS::_Internal {
 public:
};

SMS::SMS(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pc2sms.SMS)
}
SMS::SMS(const SMS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_phone().empty()) {
    phone_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_phone(),
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:pc2sms.SMS)
}

void SMS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SMS_pc2sms_2eproto.base);
  phone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SMS::~SMS() {
  // @@protoc_insertion_point(destructor:pc2sms.SMS)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SMS::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  phone_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SMS::ArenaDtor(void* object) {
  SMS* _this = reinterpret_cast< SMS* >(object);
  (void)_this;
}
void SMS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SMS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SMS& SMS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SMS_pc2sms_2eproto.base);
  return *internal_default_instance();
}


void SMS::Clear() {
// @@protoc_insertion_point(message_clear_start:pc2sms.SMS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phone_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SMS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string phone = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_phone();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pc2sms.SMS.phone"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pc2sms.SMS.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SMS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pc2sms.SMS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_phone().data(), static_cast<int>(this->_internal_phone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pc2sms.SMS.phone");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_phone(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pc2sms.SMS.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pc2sms.SMS)
  return target;
}

size_t SMS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pc2sms.SMS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_phone());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pc2sms.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  const SMS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SMS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pc2sms.SMS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pc2sms.SMS)
    MergeFrom(*source);
  }
}

void SMS::MergeFrom(const SMS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pc2sms.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {
    _internal_set_phone(from._internal_phone());
  }
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void SMS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pc2sms.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMS::CopyFrom(const SMS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pc2sms.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMS::IsInitialized() const {
  return true;
}

void SMS::InternalSwap(SMS* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  phone_.Swap(&other->phone_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SMS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestCommand::InitAsDefaultInstance() {
  ::pc2sms::_RequestCommand_default_instance_._instance.get_mutable()->credentials_ = const_cast< ::pc2sms::Credentials*>(
      ::pc2sms::Credentials::internal_default_instance());
  ::pc2sms::_RequestCommand_default_instance_._instance.get_mutable()->sms_ = const_cast< ::pc2sms::SMS*>(
      ::pc2sms::SMS::internal_default_instance());
}
class RequestCommand::_Internal {
 public:
  static const ::pc2sms::Credentials& credentials(const RequestCommand* msg);
  static const ::pc2sms::SMS& sms(const RequestCommand* msg);
};

const ::pc2sms::Credentials&
RequestCommand::_Internal::credentials(const RequestCommand* msg) {
  return *msg->credentials_;
}
const ::pc2sms::SMS&
RequestCommand::_Internal::sms(const RequestCommand* msg) {
  return *msg->sms_;
}
RequestCommand::RequestCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pc2sms.RequestCommand)
}
RequestCommand::RequestCommand(const RequestCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_credentials()) {
    credentials_ = new ::pc2sms::Credentials(*from.credentials_);
  } else {
    credentials_ = nullptr;
  }
  if (from._internal_has_sms()) {
    sms_ = new ::pc2sms::SMS(*from.sms_);
  } else {
    sms_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pc2sms.RequestCommand)
}

void RequestCommand::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestCommand_pc2sms_2eproto.base);
  ::memset(&credentials_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sms_) -
      reinterpret_cast<char*>(&credentials_)) + sizeof(sms_));
}

RequestCommand::~RequestCommand() {
  // @@protoc_insertion_point(destructor:pc2sms.RequestCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RequestCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete credentials_;
  if (this != internal_default_instance()) delete sms_;
}

void RequestCommand::ArenaDtor(void* object) {
  RequestCommand* _this = reinterpret_cast< RequestCommand* >(object);
  (void)_this;
}
void RequestCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestCommand& RequestCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestCommand_pc2sms_2eproto.base);
  return *internal_default_instance();
}


void RequestCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:pc2sms.RequestCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && credentials_ != nullptr) {
    delete credentials_;
  }
  credentials_ = nullptr;
  if (GetArena() == nullptr && sms_ != nullptr) {
    delete sms_;
  }
  sms_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pc2sms.Credentials credentials = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_credentials(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pc2sms.SMS sms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sms(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pc2sms.RequestCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pc2sms.Credentials credentials = 1;
  if (this->has_credentials()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::credentials(this), target, stream);
  }

  // .pc2sms.SMS sms = 2;
  if (this->has_sms()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::sms(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pc2sms.RequestCommand)
  return target;
}

size_t RequestCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pc2sms.RequestCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pc2sms.Credentials credentials = 1;
  if (this->has_credentials()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credentials_);
  }

  // .pc2sms.SMS sms = 2;
  if (this->has_sms()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sms_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pc2sms.RequestCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pc2sms.RequestCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pc2sms.RequestCommand)
    MergeFrom(*source);
  }
}

void RequestCommand::MergeFrom(const RequestCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pc2sms.RequestCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_credentials()) {
    _internal_mutable_credentials()->::pc2sms::Credentials::MergeFrom(from._internal_credentials());
  }
  if (from.has_sms()) {
    _internal_mutable_sms()->::pc2sms::SMS::MergeFrom(from._internal_sms());
  }
}

void RequestCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pc2sms.RequestCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestCommand::CopyFrom(const RequestCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pc2sms.RequestCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestCommand::IsInitialized() const {
  return true;
}

void RequestCommand::InternalSwap(RequestCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestCommand, sms_)
      + sizeof(RequestCommand::sms_)
      - PROTOBUF_FIELD_OFFSET(RequestCommand, credentials_)>(
          reinterpret_cast<char*>(&credentials_),
          reinterpret_cast<char*>(&other->credentials_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResponseCommand::InitAsDefaultInstance() {
}
class ResponseCommand::_Internal {
 public:
};

ResponseCommand::ResponseCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pc2sms.ResponseCommand)
}
ResponseCommand::ResponseCommand(const ResponseCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:pc2sms.ResponseCommand)
}

void ResponseCommand::SharedCtor() {
  count_ = 0;
}

ResponseCommand::~ResponseCommand() {
  // @@protoc_insertion_point(destructor:pc2sms.ResponseCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResponseCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResponseCommand::ArenaDtor(void* object) {
  ResponseCommand* _this = reinterpret_cast< ResponseCommand* >(object);
  (void)_this;
}
void ResponseCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResponseCommand& ResponseCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResponseCommand_pc2sms_2eproto.base);
  return *internal_default_instance();
}


void ResponseCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:pc2sms.ResponseCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResponseCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pc2sms.ResponseCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pc2sms.ResponseCommand)
  return target;
}

size_t ResponseCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pc2sms.ResponseCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pc2sms.ResponseCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResponseCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pc2sms.ResponseCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pc2sms.ResponseCommand)
    MergeFrom(*source);
  }
}

void ResponseCommand::MergeFrom(const ResponseCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pc2sms.ResponseCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
}

void ResponseCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pc2sms.ResponseCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseCommand::CopyFrom(const ResponseCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pc2sms.ResponseCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseCommand::IsInitialized() const {
  return true;
}

void ResponseCommand::InternalSwap(ResponseCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pc2sms
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pc2sms::Credentials* Arena::CreateMaybeMessage< ::pc2sms::Credentials >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pc2sms::Credentials >(arena);
}
template<> PROTOBUF_NOINLINE ::pc2sms::SMS* Arena::CreateMaybeMessage< ::pc2sms::SMS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pc2sms::SMS >(arena);
}
template<> PROTOBUF_NOINLINE ::pc2sms::RequestCommand* Arena::CreateMaybeMessage< ::pc2sms::RequestCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pc2sms::RequestCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::pc2sms::ResponseCommand* Arena::CreateMaybeMessage< ::pc2sms::ResponseCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pc2sms::ResponseCommand >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
